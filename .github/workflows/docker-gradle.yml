name: Docker CI/CD

on:
  push:
    branches: [ "deploy-v2" ]
  pull_request:
    branches: [ "deploy-v2" ]
permissions:
  contents: read

jobs:
  # Spring Boot 애플리케이션을 빌드하여 도커허브에 푸시하는 과정
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    # 1. Java 21 세팅
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    # 2. Gradle 캐시 설정 (옵션)
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-

    # 3. Spring Boot 애플리케이션 빌드
    - name: Build with Gradle
      run: ./gradlew build

    # 4. Docker 이미지 빌드
    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USER }}/github-actions-demo .

    # 5. DockerHub 로그인
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PWD }}

    # 6. Docker Hub 이미지 푸시
    - name: Push Docker image to DockerHub
      run: docker push ${{ secrets.DOCKER_USER }}/github-actions-demo
