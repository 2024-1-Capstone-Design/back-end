name: Run Docker Gradle

on:
  push:
    branches: [ "deploy-v2" ]
  pull_request:
    branches: [ "deploy-v2" ]
permissions:
  contents: read

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches/
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/settings.gradle*', '**/build.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-caches-

      - name: Cache Gradle Wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper/
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-wrapper-

      - name: Set Gradle properties
        run: |
          echo "org.gradle.jvmargs=-Xmx1024m -XX:MaxPermSize=256m" >> gradle.properties
          echo "org.gradle.daemon=false" >> gradle.properties

      - name: Build with Gradle
        run: ./gradlew build

      - name: Stop existing application
        run: |
          if sudo lsof -t -i:5943; then
            sudo kill -9 $(sudo lsof -t -i:5943)
          fi

      - name: Execute Jar File
        run: |
          nohup java -jar /home/ubuntu/actions-runner/_work/linode-github-action-test/linode-github-action-test/build/libs/linode-github-action-test-0.0.1-SNAPSHOT.jar &
